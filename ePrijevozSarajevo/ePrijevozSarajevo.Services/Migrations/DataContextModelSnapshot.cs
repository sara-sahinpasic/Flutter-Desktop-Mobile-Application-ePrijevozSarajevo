// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ePrijevozSarajevo.Services.Database;

#nullable disable

namespace ePrijevozSarajevo.Services.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Holiday", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HolidayId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HolidayId");

                    b.ToTable("Holidays");

                    b.HasData(
                        new
                        {
                            HolidayId = 1,
                            Date = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bajram"
                        },
                        new
                        {
                            HolidayId = 2,
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nova godina"
                        },
                        new
                        {
                            HolidayId = 3,
                            Date = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Božić"
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.IssuedTicket", b =>
                {
                    b.Property<int>("IssuedTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IssuedTicketId"));

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("IssuedTicketId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UserId");

                    b.ToTable("IssuedTickets");
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufacturerId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            ManufacturerId = 1,
                            Name = "MAN"
                        },
                        new
                        {
                            ManufacturerId = 2,
                            Name = "Solaris"
                        },
                        new
                        {
                            ManufacturerId = 3,
                            Name = "Volvo"
                        },
                        new
                        {
                            ManufacturerId = 4,
                            Name = "Mercedes"
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentOptions");
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserStatusId")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserStatusId");

                    b.ToTable("Requests");

                    b.HasData(
                        new
                        {
                            RequestId = 1,
                            Active = true,
                            Approved = false,
                            DateCreated = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(4288),
                            DocumentLink = "",
                            RejectionReason = "",
                            UserId = 2,
                            UserStatusId = 3
                        },
                        new
                        {
                            RequestId = 2,
                            Active = true,
                            Approved = false,
                            DateCreated = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(4292),
                            DocumentLink = "",
                            RejectionReason = "",
                            UserId = 3,
                            UserStatusId = 1
                        },
                        new
                        {
                            RequestId = 3,
                            Active = true,
                            Approved = false,
                            DateCreated = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(4294),
                            DocumentLink = "",
                            RejectionReason = "",
                            UserId = 4,
                            UserStatusId = 2
                        },
                        new
                        {
                            RequestId = 4,
                            Active = true,
                            Approved = false,
                            DateCreated = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(4296),
                            DocumentLink = "",
                            RejectionReason = "",
                            UserId = 5,
                            UserStatusId = 4
                        },
                        new
                        {
                            RequestId = 5,
                            Active = true,
                            Approved = false,
                            DateCreated = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(4299),
                            DocumentLink = "",
                            RejectionReason = "",
                            UserId = 6,
                            UserStatusId = 2
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("ActiveOnHolidays")
                        .HasColumnType("bit");

                    b.Property<bool>("ActiveOnWeekends")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("datetime2");

                    b.Property<int>("EndStationId")
                        .HasColumnType("int");

                    b.Property<int>("StartStationId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("RouteId");

                    b.HasIndex("EndStationId");

                    b.HasIndex("StartStationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            RouteId = 1,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 11, 13, 21, 47, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 11, 13, 21, 10, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 6,
                            StartStationId = 1,
                            VehicleId = 2
                        },
                        new
                        {
                            RouteId = 2,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 7, 17, 9, 7, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 7, 17, 8, 40, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 8,
                            StartStationId = 1,
                            VehicleId = 4
                        },
                        new
                        {
                            RouteId = 3,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 5, 2, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 5, 2, 23, 41, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 6,
                            StartStationId = 1,
                            VehicleId = 6
                        },
                        new
                        {
                            RouteId = 4,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 2, 8, 7, 39, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 2, 8, 7, 20, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 7,
                            StartStationId = 2,
                            VehicleId = 4
                        },
                        new
                        {
                            RouteId = 5,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 1, 8, 6, 17, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 1, 8, 5, 31, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 3,
                            StartStationId = 7,
                            VehicleId = 2
                        },
                        new
                        {
                            RouteId = 6,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 11, 3, 0, 13, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 11, 2, 23, 31, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 1,
                            StartStationId = 8,
                            VehicleId = 6
                        },
                        new
                        {
                            RouteId = 7,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 12, 19, 10, 55, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 12, 19, 10, 13, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 15,
                            StartStationId = 9,
                            VehicleId = 1
                        },
                        new
                        {
                            RouteId = 8,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 8, 23, 15, 32, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 8, 23, 15, 14, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 8,
                            StartStationId = 11,
                            VehicleId = 3
                        },
                        new
                        {
                            RouteId = 9,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 3, 31, 23, 11, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 3, 31, 22, 55, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 14,
                            StartStationId = 10,
                            VehicleId = 5
                        },
                        new
                        {
                            RouteId = 10,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 3, 28, 18, 33, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2024, 3, 28, 18, 18, 0, 0, DateTimeKind.Unspecified),
                            EndStationId = 7,
                            StartStationId = 13,
                            VehicleId = 1
                        },
                        new
                        {
                            RouteId = 11,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3872),
                            Departure = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3871),
                            EndStationId = 15,
                            StartStationId = 7,
                            VehicleId = 1
                        },
                        new
                        {
                            RouteId = 12,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3874),
                            Departure = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3874),
                            EndStationId = 6,
                            StartStationId = 8,
                            VehicleId = 2
                        },
                        new
                        {
                            RouteId = 13,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3876),
                            Departure = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3875),
                            EndStationId = 4,
                            StartStationId = 7,
                            VehicleId = 5
                        },
                        new
                        {
                            RouteId = 14,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3877),
                            Departure = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3877),
                            EndStationId = 13,
                            StartStationId = 8,
                            VehicleId = 3
                        },
                        new
                        {
                            RouteId = 15,
                            Active = true,
                            ActiveOnHolidays = true,
                            ActiveOnWeekends = true,
                            Arrival = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3879),
                            Departure = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3878),
                            EndStationId = 2,
                            StartStationId = 7,
                            VehicleId = 4
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StationId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            Name = "Ilidža"
                        },
                        new
                        {
                            StationId = 2,
                            Name = "Stup"
                        },
                        new
                        {
                            StationId = 3,
                            Name = "Nedžarići"
                        },
                        new
                        {
                            StationId = 4,
                            Name = "Socijalno"
                        },
                        new
                        {
                            StationId = 5,
                            Name = "Malta"
                        },
                        new
                        {
                            StationId = 6,
                            Name = "Baščaršija"
                        },
                        new
                        {
                            StationId = 7,
                            Name = "Otoka"
                        },
                        new
                        {
                            StationId = 8,
                            Name = "Skenderija"
                        },
                        new
                        {
                            StationId = 9,
                            Name = "Drvenija"
                        },
                        new
                        {
                            StationId = 10,
                            Name = "Dobrinja"
                        },
                        new
                        {
                            StationId = 11,
                            Name = "Grbavica"
                        },
                        new
                        {
                            StationId = 12,
                            Name = "Hrasno"
                        },
                        new
                        {
                            StationId = 13,
                            Name = "Aneks"
                        },
                        new
                        {
                            StationId = 14,
                            Name = "Alipašino polje"
                        },
                        new
                        {
                            StationId = 15,
                            Name = "Švrakino selo"
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<double>("Discount")
                        .HasPrecision(5, 2)
                        .HasColumnType("float(5)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Discount = 0.0,
                            Name = "Default"
                        },
                        new
                        {
                            StatusId = 2,
                            Discount = 0.29999999999999999,
                            Name = "Student"
                        },
                        new
                        {
                            StatusId = 3,
                            Discount = 0.5,
                            Name = "Penzioner"
                        },
                        new
                        {
                            StatusId = 4,
                            Discount = 0.14999999999999999,
                            Name = "Zaposlenik"
                        },
                        new
                        {
                            StatusId = 5,
                            Discount = 0.40000000000000002,
                            Name = "Nezaposlen"
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("StateMachine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            Name = "Jednosmjerna",
                            Price = 1.8,
                            StateMachine = "draft"
                        },
                        new
                        {
                            TicketId = 2,
                            Name = "Povratna",
                            Price = 3.2000000000000002,
                            StateMachine = "draft"
                        },
                        new
                        {
                            TicketId = 3,
                            Name = "Jednosmjerna dječija",
                            Price = 0.80000000000000004,
                            StateMachine = "draft"
                        },
                        new
                        {
                            TicketId = 4,
                            Name = "Povratna dječija",
                            Price = 1.2,
                            StateMachine = "draft"
                        },
                        new
                        {
                            TicketId = 5,
                            Name = "Mjesečna",
                            Price = 75.0,
                            StateMachine = "draft"
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            Name = "Trolleybus"
                        },
                        new
                        {
                            TypeId = 2,
                            Name = "Tram"
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StatusExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserStatusId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserStatusId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Active = true,
                            Address = "Adresa 11",
                            DateOfBirth = new DateTime(1998, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara.sahinpasic@edu.fit.ba",
                            FirstName = "Sara",
                            LastName = "Šahinpašić",
                            ModifiedDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3946),
                            PasswordHash = "lFKl5mikGguSug4F6VEyhSRh4IY=",
                            PasswordSalt = "dN07kQseALJvOsmoRaFAEw==",
                            PhoneNumber = "061222333",
                            ProfileImagePath = "",
                            RegistrationDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3945),
                            StatusExpirationDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "desktop",
                            UserStatusId = 4
                        },
                        new
                        {
                            UserId = 2,
                            Active = true,
                            Address = "Adresa 12",
                            DateOfBirth = new DateTime(1988, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara.sahinpasic@hotmail.com",
                            FirstName = "Senada",
                            LastName = "Šahinpašić",
                            ModifiedDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3956),
                            PasswordHash = "Ad0UbDw+DNVk7X+Z+xiPvh7Wvro=",
                            PasswordSalt = "MMIe/Jd1w+hqC+pIHb4w3g==",
                            PhoneNumber = "061222444",
                            ProfileImagePath = "",
                            RegistrationDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3955),
                            StatusExpirationDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "mobile",
                            UserStatusId = 4
                        },
                        new
                        {
                            UserId = 3,
                            Active = true,
                            Address = "Adresa 14",
                            DateOfBirth = new DateTime(1975, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "neki@mail.com",
                            FirstName = "Test",
                            LastName = "Testni",
                            ModifiedDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3970),
                            PasswordHash = "jodolSf6OVfusIGhjiYY5g5CQ6I=",
                            PasswordSalt = "oq3CuARH3bx4LcAPWgt+8Q==",
                            PhoneNumber = "061222555",
                            ProfileImagePath = "",
                            RegistrationDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3969),
                            StatusExpirationDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "mobile1",
                            UserStatusId = 1
                        },
                        new
                        {
                            UserId = 4,
                            Active = true,
                            Address = "Adresa 15",
                            DateOfBirth = new DateTime(1965, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "neko@mail.com",
                            FirstName = "Testni",
                            LastName = "Test",
                            ModifiedDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3976),
                            PasswordHash = "IA6/4yK78qaqtnc9m+JWDa7YnHw=",
                            PasswordSalt = "CP/XH/uhKusgjKIbWTVpgQ==",
                            PhoneNumber = "061222666",
                            ProfileImagePath = "",
                            RegistrationDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3975),
                            StatusExpirationDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "mobile2",
                            UserStatusId = 1
                        },
                        new
                        {
                            UserId = 5,
                            Active = true,
                            Address = "Adresa 16",
                            DateOfBirth = new DateTime(1982, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "proba@mail.com",
                            FirstName = "Proba",
                            LastName = "Probni",
                            ModifiedDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3981),
                            PasswordHash = "w7nZSBqcMtckZJ78OEgqU0tiSHw=",
                            PasswordSalt = "kg+ao6X4/5AnZMx7tIlkRw==",
                            PhoneNumber = "061222777",
                            ProfileImagePath = "",
                            RegistrationDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3980),
                            StatusExpirationDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "mobile3",
                            UserStatusId = 1
                        },
                        new
                        {
                            UserId = 6,
                            Active = true,
                            Address = "Adresa 17",
                            DateOfBirth = new DateTime(1996, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "probe@mail.com",
                            FirstName = "Probe",
                            LastName = "Probno",
                            ModifiedDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3987),
                            PasswordHash = "T6wLXfJvnQvYcG4k1EsGHDhPsj0=",
                            PasswordSalt = "wSkHES70Zg8F1o/b8I2kNA==",
                            PhoneNumber = "061222888",
                            ProfileImagePath = "",
                            RegistrationDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(3986),
                            StatusExpirationDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "mobile3",
                            UserStatusId = 1
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            ModificationDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(4439),
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            UserRoleId = 2,
                            ModificationDate = new DateTime(2024, 10, 2, 17, 10, 13, 664, DateTimeKind.Local).AddTicks(4441),
                            RoleId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<int>("BuildYear")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            BuildYear = 2005,
                            ManufacturerId = 1,
                            Number = 15,
                            RegistrationNumber = "A10-B-123",
                            TypeId = 1
                        },
                        new
                        {
                            VehicleId = 2,
                            BuildYear = 2015,
                            ManufacturerId = 2,
                            Number = 20,
                            RegistrationNumber = "A11-C-124",
                            TypeId = 2
                        },
                        new
                        {
                            VehicleId = 3,
                            BuildYear = 2010,
                            ManufacturerId = 3,
                            Number = 25,
                            RegistrationNumber = "A12-D-154",
                            TypeId = 1
                        },
                        new
                        {
                            VehicleId = 4,
                            BuildYear = 2007,
                            ManufacturerId = 4,
                            Number = 30,
                            RegistrationNumber = "A14-E-174",
                            TypeId = 2
                        },
                        new
                        {
                            VehicleId = 5,
                            BuildYear = 2014,
                            ManufacturerId = 4,
                            Number = 35,
                            RegistrationNumber = "A15-F-183",
                            TypeId = 1
                        },
                        new
                        {
                            VehicleId = 6,
                            BuildYear = 2011,
                            ManufacturerId = 3,
                            Number = 35,
                            RegistrationNumber = "A16-G-195",
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.IssuedTicket", b =>
                {
                    b.HasOne("ePrijevozSarajevo.Services.Database.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId");

                    b.HasOne("ePrijevozSarajevo.Services.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Ticket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Request", b =>
                {
                    b.HasOne("ePrijevozSarajevo.Services.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ePrijevozSarajevo.Services.Database.Status", "UserStatus")
                        .WithMany()
                        .HasForeignKey("UserStatusId");

                    b.Navigation("User");

                    b.Navigation("UserStatus");
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Route", b =>
                {
                    b.HasOne("ePrijevozSarajevo.Services.Database.Station", "EndStation")
                        .WithMany()
                        .HasForeignKey("EndStationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ePrijevozSarajevo.Services.Database.Station", "StartStation")
                        .WithMany()
                        .HasForeignKey("StartStationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ePrijevozSarajevo.Services.Database.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EndStation");

                    b.Navigation("StartStation");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.User", b =>
                {
                    b.HasOne("ePrijevozSarajevo.Services.Database.Status", "UserStatus")
                        .WithMany()
                        .HasForeignKey("UserStatusId");

                    b.Navigation("UserStatus");
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.UserRole", b =>
                {
                    b.HasOne("ePrijevozSarajevo.Services.Database.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ePrijevozSarajevo.Services.Database.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Vehicle", b =>
                {
                    b.HasOne("ePrijevozSarajevo.Services.Database.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ePrijevozSarajevo.Services.Database.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ePrijevozSarajevo.Services.Database.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
